#include "oaDX11Flags.h"

namespace oaEngineSDK {

Map<BIND,uint32> Flags::FLAGS{
  {BIND::VERTEX,D3D11_BIND_VERTEX_BUFFER},
  {BIND::CONSTANT,D3D11_BIND_CONSTANT_BUFFER},
  {BIND::INDEX,D3D11_BIND_INDEX_BUFFER},
  {BIND::DEPTH_STENCIL,D3D11_BIND_DEPTH_STENCIL},
  {BIND::SHADER_RESOURCE,D3D11_BIND_SHADER_RESOURCE},
  {BIND::RENDER_TARGET,D3D11_BIND_RENDER_TARGET},
  {BIND::SHADER_RESOURCE_RENDER_TARGET,D3D11_BIND_SHADER_RESOURCE|D3D11_BIND_RENDER_TARGET},
  };

Map<FILTER, D3D11_FILTER> Flags::FILTER_FLAGS{
  {FILTER::MIN_MAG_MIP_POINT,D3D11_FILTER_MIN_MAG_MIP_POINT},
  {FILTER::MIN_MAG_POINT_MIP_LINEAR,D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR},
  {FILTER::MIN_POINT_MAG_LINEAR_MIP_POINT,D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT},
  {FILTER::MIN_POINT_MAG_MIP_LINEAR,D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR},
  {FILTER::MIN_LINEAR_MAG_MIP_POINT,D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT},
  {FILTER::MIN_LINEAR_MAG_POINT_MIP_LINEAR,D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR},
  {FILTER::MIN_MAG_LINEAR_MIP_POINT,D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT},
  {FILTER::MIN_MAG_MIP_LINEAR,D3D11_FILTER_MIN_MAG_MIP_LINEAR},
  {FILTER::ANISOTROPIC,D3D11_FILTER_ANISOTROPIC},
  {FILTER::COMPARISON_MIN_MAG_MIP_POINT,D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT},
  {FILTER::COMPARISON_MIN_MAG_POINT_MIP_LINEAR,D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR},
  {FILTER::COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT},
  {FILTER::COMPARISON_MIN_POINT_MAG_MIP_LINEAR,D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR},
  {FILTER::COMPARISON_MIN_LINEAR_MAG_MIP_POINT,D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT},
  {FILTER::COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR},
  {FILTER::COMPARISON_MIN_MAG_LINEAR_MIP_POINT,D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT},
  {FILTER::COMPARISON_MIN_MAG_MIP_LINEAR,D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR},
  {FILTER::COMPARISON_ANISOTROPIC,D3D11_FILTER_COMPARISON_ANISOTROPIC},
  {FILTER::MINIMUM_MIN_MAG_MIP_POINT,D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT},
  {FILTER::MINIMUM_MIN_MAG_POINT_MIP_LINEAR,D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR},
  {FILTER::MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT,D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT},
  {FILTER::MINIMUM_MIN_POINT_MAG_MIP_LINEAR,D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR},
  {FILTER::MINIMUM_MIN_LINEAR_MAG_MIP_POINT,D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT},
  {FILTER::MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR,D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR},
  {FILTER::MINIMUM_MIN_MAG_LINEAR_MIP_POINT,D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT},
  {FILTER::MINIMUM_MIN_MAG_MIP_LINEAR,D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR},
  {FILTER::MINIMUM_ANISOTROPIC,D3D11_FILTER_MINIMUM_ANISOTROPIC},
  {FILTER::MAXIMUM_MIN_MAG_MIP_POINT,D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT},
  {FILTER::MAXIMUM_MIN_MAG_POINT_MIP_LINEAR,D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR},
  {FILTER::MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT,D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT},
  {FILTER::MAXIMUM_MIN_POINT_MAG_MIP_LINEAR,D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR},
  {FILTER::MAXIMUM_MIN_LINEAR_MAG_MIP_POINT,D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT},
  {FILTER::MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR,D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR},
  {FILTER::MAXIMUM_MIN_MAG_LINEAR_MIP_POINT,D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT},
  {FILTER::MAXIMUM_MIN_MAG_MIP_LINEAR,D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR},
  {FILTER::MAXIMUM_ANISOTROPIC,D3D11_FILTER_MAXIMUM_ANISOTROPIC}
};

Map<TEXTURE_ADDRESS_MODE, D3D11_TEXTURE_ADDRESS_MODE> Flags::TEXTURE_ADDRESS_FLAGS{
  {TEXTURE_ADDRESS_MODE::WRAP,D3D11_TEXTURE_ADDRESS_WRAP},
  {TEXTURE_ADDRESS_MODE::MIRROR,D3D11_TEXTURE_ADDRESS_MIRROR},
  {TEXTURE_ADDRESS_MODE::CLAMP,D3D11_TEXTURE_ADDRESS_CLAMP},
  {TEXTURE_ADDRESS_MODE::BORDER,D3D11_TEXTURE_ADDRESS_BORDER},
  {TEXTURE_ADDRESS_MODE::MIRROR_ONCE,D3D11_TEXTURE_ADDRESS_MIRROR_ONCE},  
};

Map<COMPARISON_FUNC, D3D11_COMPARISON_FUNC> Flags::COMPARISON_FLAGS{
  {COMPARISON_FUNC::NEVER,D3D11_COMPARISON_NEVER},
  {COMPARISON_FUNC::LESS,D3D11_COMPARISON_LESS},
  {COMPARISON_FUNC::EQUAL,D3D11_COMPARISON_EQUAL},
  {COMPARISON_FUNC::LESS_EQUAL,D3D11_COMPARISON_LESS_EQUAL},
  {COMPARISON_FUNC::GREATER,D3D11_COMPARISON_GREATER},
  {COMPARISON_FUNC::NOT_EQUAL,D3D11_COMPARISON_NOT_EQUAL},
  {COMPARISON_FUNC::GREATER_EQUAL,D3D11_COMPARISON_GREATER_EQUAL},
  {COMPARISON_FUNC::ALWAYS,D3D11_COMPARISON_ALWAYS}
}; 

Map<FORMAT,DXGI_FORMAT> Flags::FORMATS{
  {FORMAT::D24_UNORM_S8_UINT,DXGI_FORMAT_D24_UNORM_S8_UINT},
  {FORMAT::R32G32B32A32_FLOAT,DXGI_FORMAT_R32G32B32A32_FLOAT}
  };

Map<DS_DIMENSION,D3D11_DSV_DIMENSION> Flags::DS_DIMENCIONS{
  {DS_DIMENSION::UNKNOWN,D3D11_DSV_DIMENSION_UNKNOWN},
  {DS_DIMENSION::TEXTURE1D,D3D11_DSV_DIMENSION_TEXTURE1D},
  {DS_DIMENSION::TEXTURE1DARRAY,D3D11_DSV_DIMENSION_TEXTURE1DARRAY},
  {DS_DIMENSION::TEXTURE2D,D3D11_DSV_DIMENSION_TEXTURE2D},
  {DS_DIMENSION::TEXTURE2DARRAY,D3D11_DSV_DIMENSION_TEXTURE2DARRAY},
  {DS_DIMENSION::TEXTURE2DMS,D3D11_DSV_DIMENSION_TEXTURE2DMS},
  {DS_DIMENSION::TEXTURE2DMSARRAY,D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY},
};

Map<SRV_DIMENSION,D3D11_SRV_DIMENSION> Flags::SRV_DIMENCIONS{
  {SRV_DIMENSION::UNKNOWN,D3D11_SRV_DIMENSION_UNKNOWN},
  {SRV_DIMENSION::BUFFER,D3D11_SRV_DIMENSION_BUFFER},
  {SRV_DIMENSION::TEXTURE1D, D3D11_SRV_DIMENSION_TEXTURE1D},
  {SRV_DIMENSION::TEXTURE1DARRAY,D3D11_SRV_DIMENSION_TEXTURE1DARRAY},
  {SRV_DIMENSION::TEXTURE2D,D3D11_SRV_DIMENSION_TEXTURE2D},
  {SRV_DIMENSION::TEXTURE2DARRAY,D3D11_SRV_DIMENSION_TEXTURE2DARRAY },
  {SRV_DIMENSION::TEXTURE2DMS,D3D11_SRV_DIMENSION_TEXTURE2DMS},
  {SRV_DIMENSION::TEXTURE2DMSARRAY,D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY},
  {SRV_DIMENSION::TEXTURE3D,D3D11_SRV_DIMENSION_TEXTURE3D},
  {SRV_DIMENSION::TEXTURECUBE,D3D11_SRV_DIMENSION_TEXTURECUBE},
  {SRV_DIMENSION::TEXTURECUBEARRAY,D3D11_SRV_DIMENSION_TEXTURECUBEARRAY},
  {SRV_DIMENSION::BUFFEREX,D3D11_SRV_DIMENSION_BUFFEREX}
};

}