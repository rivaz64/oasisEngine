#pragma once

#include "oaPrerequisitesCore.h"

namespace oaEngineSDK{

enum class BIND{
  VERTEX=0,
  CONSTANT,
  INDEX,
  DEPTH_STENCIL,
  SHADER_RESOURCE,
  RENDER_TARGET,
  SHADER_RESOURCE_RENDER_TARGET
};

enum class DS_DIMENSION
{
  UNKNOWN	= 0,
  TEXTURE1D,
  TEXTURE1DARRAY,
  TEXTURE2D,
  TEXTURE2DARRAY,
  TEXTURE2DMS,
  TEXTURE2DMSARRAY
};

enum class SRV_DIMENSION
{
  UNKNOWN = 0,
  BUFFER,
  TEXTURE1D,
  TEXTURE1DARRAY,
  TEXTURE2D,
  TEXTURE2DARRAY,
  TEXTURE2DMS,
  TEXTURE2DMSARRAY,
  TEXTURE3D,
  TEXTURECUBE,
  TEXTURECUBEARRAY,
  BUFFEREX  
};

enum class FILTER{
  MIN_MAG_MIP_POINT = 0,
  MIN_MAG_POINT_MIP_LINEAR,
  MIN_POINT_MAG_LINEAR_MIP_POINT,
  MIN_POINT_MAG_MIP_LINEAR,
  MIN_LINEAR_MAG_MIP_POINT,
  MIN_LINEAR_MAG_POINT_MIP_LINEAR,
  MIN_MAG_LINEAR_MIP_POINT,
  MIN_MAG_MIP_LINEAR,
  ANISOTROPIC,
  COMPARISON_MIN_MAG_MIP_POINT,
  COMPARISON_MIN_MAG_POINT_MIP_LINEAR,
  COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,
  COMPARISON_MIN_POINT_MAG_MIP_LINEAR,
  COMPARISON_MIN_LINEAR_MAG_MIP_POINT,
  COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
  COMPARISON_MIN_MAG_LINEAR_MIP_POINT,
  COMPARISON_MIN_MAG_MIP_LINEAR,
  COMPARISON_ANISOTROPIC,
  MINIMUM_MIN_MAG_MIP_POINT,
  MINIMUM_MIN_MAG_POINT_MIP_LINEAR,
  MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT,
  MINIMUM_MIN_POINT_MAG_MIP_LINEAR,
  MINIMUM_MIN_LINEAR_MAG_MIP_POINT,
  MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
  MINIMUM_MIN_MAG_LINEAR_MIP_POINT,
  MINIMUM_MIN_MAG_MIP_LINEAR,
  MINIMUM_ANISOTROPIC,
  MAXIMUM_MIN_MAG_MIP_POINT,
  MAXIMUM_MIN_MAG_POINT_MIP_LINEAR,
  MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT,
  MAXIMUM_MIN_POINT_MAG_MIP_LINEAR,
  MAXIMUM_MIN_LINEAR_MAG_MIP_POINT,
  MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
  MAXIMUM_MIN_MAG_LINEAR_MIP_POINT,
  MAXIMUM_MIN_MAG_MIP_LINEAR,
  MAXIMUM_ANISOTROPIC
};

enum class TEXTURE_ADDRESS_MODE {
  WRAP=0,
  MIRROR,
  CLAMP,
  BORDER,
  MIRROR_ONCE
};

enum class COMPARISON_FUNC {
  NEVER=0,
  LESS,
  EQUAL,
  LESS_EQUAL,
  GREATER,
  NOT_EQUAL,
  GREATER_EQUAL,
  ALWAYS

};

enum class FORMAT{
  D24_UNORM_S8_UINT = 0,
  R32G32B32A32_FLOAT
};

namespace COMPONENT_TYPE{
enum E{
  NONE = 0,
  GRAPHICS,
  SKELETON,
  ANIMATION
};
}

}